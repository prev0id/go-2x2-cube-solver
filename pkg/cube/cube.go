package cube

type Cube [24]Sticker
type Sticker int8

func (c *Cube) IsSolved() bool {
	for _, cube := range SolvedCubes {
		if *c == cube {
			return true
		}
	}
	return false
}

func (c *Cube) IsValid() bool {
	return true
}

var (
	SolvedCubes = []Cube{
		{0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5},
		{3, 3, 3, 3, 0, 0, 0, 0, 2, 2, 2, 2, 5, 5, 5, 5, 4, 4, 4, 4, 1, 1, 1, 1},
		{5, 5, 5, 5, 3, 3, 3, 3, 2, 2, 2, 2, 1, 1, 1, 1, 4, 4, 4, 4, 0, 0, 0, 0},
		{1, 1, 1, 1, 5, 5, 5, 5, 2, 2, 2, 2, 0, 0, 0, 0, 4, 4, 4, 4, 3, 3, 3, 3},
		{5, 5, 5, 5, 1, 1, 1, 1, 4, 4, 4, 4, 3, 3, 3, 3, 2, 2, 2, 2, 0, 0, 0, 0},
		{3, 3, 3, 3, 5, 5, 5, 5, 4, 4, 4, 4, 0, 0, 0, 0, 2, 2, 2, 2, 1, 1, 1, 1},
		{0, 0, 0, 0, 3, 3, 3, 3, 4, 4, 4, 4, 1, 1, 1, 1, 2, 2, 2, 2, 5, 5, 5, 5},
		{1, 1, 1, 1, 0, 0, 0, 0, 4, 4, 4, 4, 5, 5, 5, 5, 2, 2, 2, 2, 3, 3, 3, 3},
		{0, 0, 0, 0, 4, 4, 4, 4, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 5, 5, 5, 5},
		{2, 2, 2, 2, 0, 0, 0, 0, 1, 1, 1, 1, 5, 5, 5, 5, 3, 3, 3, 3, 4, 4, 4, 4},
		{5, 5, 5, 5, 2, 2, 2, 2, 1, 1, 1, 1, 4, 4, 4, 4, 3, 3, 3, 3, 0, 0, 0, 0},
		{4, 4, 4, 4, 5, 5, 5, 5, 1, 1, 1, 1, 0, 0, 0, 0, 3, 3, 3, 3, 2, 2, 2, 2},
		{0, 0, 0, 0, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 1, 1, 1, 1, 5, 5, 5, 5},
		{4, 4, 4, 4, 0, 0, 0, 0, 3, 3, 3, 3, 5, 5, 5, 5, 1, 1, 1, 1, 2, 2, 2, 2},
		{5, 5, 5, 5, 4, 4, 4, 4, 3, 3, 3, 3, 2, 2, 2, 2, 1, 1, 1, 1, 0, 0, 0, 0},
		{2, 2, 2, 2, 5, 5, 5, 5, 3, 3, 3, 3, 0, 0, 0, 0, 1, 1, 1, 1, 4, 4, 4, 4},
		{2, 2, 2, 2, 1, 1, 1, 1, 5, 5, 5, 5, 3, 3, 3, 3, 0, 0, 0, 0, 4, 4, 4, 4},
		{1, 1, 1, 1, 4, 4, 4, 4, 5, 5, 5, 5, 2, 2, 2, 2, 0, 0, 0, 0, 3, 3, 3, 3},
		{4, 4, 4, 4, 3, 3, 3, 3, 5, 5, 5, 5, 1, 1, 1, 1, 0, 0, 0, 0, 2, 2, 2, 2},
		{3, 3, 3, 3, 2, 2, 2, 2, 5, 5, 5, 5, 4, 4, 4, 4, 0, 0, 0, 0, 1, 1, 1, 1},
		{2, 2, 2, 2, 3, 3, 3, 3, 0, 0, 0, 0, 1, 1, 1, 1, 5, 5, 5, 5, 4, 4, 4, 4},
		{3, 3, 3, 3, 4, 4, 4, 4, 0, 0, 0, 0, 2, 2, 2, 2, 5, 5, 5, 5, 1, 1, 1, 1},
		{4, 4, 4, 4, 1, 1, 1, 1, 0, 0, 0, 0, 3, 3, 3, 3, 5, 5, 5, 5, 2, 2, 2, 2},
		{1, 1, 1, 1, 2, 2, 2, 2, 0, 0, 0, 0, 4, 4, 4, 4, 5, 5, 5, 5, 3, 3, 3, 3},
	}
)
